cd 路径跳转
git init  建立资源仓库，在当前路径下添加版本控制
git add readme.txt 添加文件
git commit -m "注释" 提交文件
git status  查看当前仓库状态
git diff 查看文件差异
git status告诉你有文件被修改过，用git diff可以查看修改内容
HEAD 指针，指向当前版本；head^,上一个版本；Head^^,上上一个版本：……head~100,向上100个版本
git reset --hard 版本号 回滚到指定版本号，版本号可以只写前几位
git log 查看版本提交记录，回滚后，版本后的历史记录会消失
git reflog  查看版本命令记录，记录所有命令的版本号
git checkout -- readme.txt 把readme.txt文件在工作区的修改全部撤销，这里有两种情况：一种是readme.txt自修改后还没有被放到暂存区撤销修改就回到
和版本库一模一样的状态；一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。总之，就是让这个文件回到最近
一次git commit或git add时的状态。
  git checkout -- readme.txt 恢复本地工作区删除但是版本库仍存在的文件
git reset HEAD readme.txt 将add到缓存区的内容撤销，文件状态回到本地修改但没有添加到add缓存区的状态
git rm readne.txt 删除文件
git remote add origin https://github.com/lanhuilan（用户名）/Git（远程库名）.git 本地关联远程库
git push -u origin master 第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master
分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令
git push origin master 本地仓库内容推送到远程仓库
git pull origin master 远程仓库能容下载到本地
git clone 将远程仓库克隆到本地。支持多种协议，包括https（示例：git clone http://github.com/lanhuilan/swan），但通过ssh支持的原生git协议（示
例：git clone git@github.com:lanhuilan/Ann.git）速度最快
git branch 查看分支列表，*表示当前所在分支
git branch dev 创建dev分支
git branch -d dev 删除分支，不能删除当前所在分支
git checkout master 切换到主干
git checkout -b dev 创建并切换到新的分支上
git merge dev 将指定分支dev合并到当前分支上 Fast forward模式，git merge --no-ff -m "merge with no-ff" dev, 非Fast forward模式，区别在哪里，
没看出来，（）？？？？？？（标记一下，以后看）-m "注释内容" 作用应该是添加注释文字。
git log --graph --pretty=oneline --abbrev-commit 查看提交记录，和合并路线图，简单模式。
git stash 将当前已经修改并提交到缓存区的修改内容暂时冻结
git stash list 查看当前冻结的工作进度列表
git stash apply 恢复当前工作进度
git stash apply stash@{0} 恢复当前工作到指定进度
git stash drop 删除冻结的工作进度
git stash pop 恢复工作进度，并删除冻结记录
git branch -D dev 强制删除一个还没有合并过的分支
git remote -v 查看远程库信息
git push origin dev  提交本地dev分支到远程库
git pull 抓取远程的新提交
git checkout -b dev origin.dev 在本地创建和远程分支名字相同的分支
git branch --set-upstream dev origin/dev 建立本地分支和远程分支的关联
git tag <name> 用于新建一个标签，默认为HEAD，也可以指定一个commit id
git tag -a <tagname> -m "blablabla..."可以指定标签信息
git tag -s <tagname> -m "blablabla..."可以用PGP签名标签
git tag 可以查看所有标签
git tag -d <tagname> 删除标签
git push origin <tagname> 推送一个本地标签到远程库
git push origin --tags 推送全部未推送过的本地标签到远程库
git tag -d <tagname> 删除一个本地标签
git push origin :refs/tags/<tagname>可以删除一个远程标签



